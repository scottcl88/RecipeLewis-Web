@inherits LayoutComponentBase
@inject MenuService MenuService

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@DarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />
<PWAUpdater />

<MudLayout>
    <MudAppBar Elevation="1" Class="d-print-none">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Recipe Lewis</MudText>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Class="d-print-none">
        <NavMenu />
        <MudSwitch @bind-Checked="@DarkMode" Color="Color.Primary" Class="ma-4" T="bool" Label="Dark Mode" />
        <p style="padding-left: 25px; bottom: 0%; position: fixed;">
            <a target="_blank" href="https://icons8.com/icon/oj3YGxooY6PN/cookbook">Cookbook</a> icon by <a target="_blank" href="https://icons8.com">Icons8</a>
        </p>
    </MudDrawer>
    <MudMainContent Class="">
        <MudContainer class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
@code {
    private MudThemeProvider? _mudThemeProvider;
    private MudTheme _theme = new();
    private bool _isDarkMode;
    bool _drawerOpen = true;

    public bool DarkMode
    {
        get
        {
            return _isDarkMode;
        }
        set
        {
            MenuService.SetDarkMode(value);
            _isDarkMode = value;
        }
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider?.GetSystemPreference();
            MenuService.OnChange += () => MenuStateHasChanged();
            StateHasChanged();
        }
    }
    private void MenuStateHasChanged()
    {
        _isDarkMode = MenuService.IsDarkMode;
        StateHasChanged();
    }

}
<style>
      @@media print {
        .mud-main-content{
            padding-top: 0 !important;
        }
      }
      .bold{
          font-weight: bold !important;
      }
</style>